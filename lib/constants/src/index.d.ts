import { dynamoScanTable, expBackoff, asyncPool, duplicate } from './utilities';
interface IModuleSpec {
    registry: string;
    version: string;
}
import { isSpecialized, Permissions, RestrictedPermissions, UserPermissions } from './permissions';
declare const API_PUBLIC_ENDPOINT: string;
declare const valid_boundary_name: RegExp;
declare const valid_function_name: RegExp;
declare const function_build_status_key_prefix = "function-build-status";
declare const function_build_request_key_prefix = "function-build-request";
declare const function_build_key_prefix = "function-build";
declare const function_spec_key_prefix = "function-spec";
declare const cron_key_prefix = "function-cron";
declare const module_key_prefix = "npm-module";
declare const REGISTRY_CATEGORY = "registry-npm-package";
declare const REGISTRY_CATEGORY_CONFIG = "registry-npm-config";
declare const REGISTRY_DEFAULT = "default";
declare const REGISTRY_GLOBAL = "registry-global";
declare const REGISTRY_RESERVED_SCOPE_PREFIX = "@fuse";
declare const MODULE_PUBLIC_REGISTRY = "public";
declare const RUNAS_ISSUER = "runas-system-issuer";
declare const RUNAS_SYSTEM_ISSUER_SUFFIX = "system.fusebit.io";
declare const JWT_PERMISSION_CLAIM = "https://fusebit.io/permissions";
declare const RUNAS_KID_LEN = 8;
declare function get_log_table_name(deploymentKey: string): string;
declare function get_key_value_table_name(deploymentKey: string): string;
declare function get_subscription_table_name(deploymentKey: string): string;
declare function get_deployment_s3_bucket(deployment: any): string;
declare function get_module_metadata_key(runtime: string, name: string, moduleSpec: IModuleSpec | string): string;
declare function get_module_key(runtime: string, name: string, moduleSpec: IModuleSpec): string;
declare function get_module_builder_description(ctx: any, name: string, moduleSpec: IModuleSpec): string;
declare function get_function_builder_description(options: any): string;
declare function get_function_builder_name(options: any): string;
declare function get_module_builder_name(ctx: any, name: string): string;
declare function get_user_function_build_status_key(options: any): string;
declare function get_user_function_build_request_key(options: any): string;
declare function get_user_function_build_key(options: any): string;
declare function get_user_function_spec_key(options: any): string;
declare function get_user_function_description(options: any): string;
declare function get_user_function_name(options: any, version?: string): string;
declare function get_cron_key_prefix(options: any): string;
declare function get_cron_key_suffix(options: any): string;
declare function get_cron_key(options: any): string;
declare function get_function_location(req: any, subscriptionId: string, boundaryId: string, functionId: string): string;
declare function get_fusebit_endpoint(req: any): string;
declare function get_function_path(subscriptionId: string, boundaryId: string, functionId: string): string;
declare const get_compute_tag_key: (key: string) => string;
declare const get_dependency_tag_key: (key: string) => string;
declare const get_versions_tag_key: (key: string) => string;
declare const get_metadata_tag_key: (key: string) => string;
declare const get_template_tag_key: (key: string) => string;
declare const get_fusebit_tag_key: (key: string) => string;
declare const get_security_tag_key: (key: string) => string;
declare function isSystemIssuer(issuerId: string): RegExpMatchArray | null;
declare function makeSystemIssuerId(kid: string): string;
declare function makeFunctionSub(params: any, mode: string): string;
declare const getFunctionPermissions: (summary: any) => any;
declare const getFunctionVersion: (summary: any) => any;
declare const getFunctionAuthorization: (summary: any) => any;
declare const getFunctionAuthentication: (summary: any) => any;
export { get_log_table_name, get_key_value_table_name, get_subscription_table_name, valid_boundary_name, valid_function_name, function_build_status_key_prefix, function_build_request_key_prefix, function_build_key_prefix, function_spec_key_prefix, cron_key_prefix, module_key_prefix, get_module_metadata_key, get_module_key, get_user_function_build_status_key, get_user_function_build_request_key, get_user_function_build_key, get_user_function_spec_key, get_user_function_description, get_user_function_name, get_function_builder_description, get_module_builder_description, get_function_builder_name, get_module_builder_name, get_cron_key_prefix, get_cron_key_suffix, get_cron_key, get_function_location, get_function_path, get_fusebit_endpoint, get_deployment_s3_bucket, get_compute_tag_key, get_dependency_tag_key, get_versions_tag_key, get_metadata_tag_key, get_template_tag_key, get_fusebit_tag_key, get_security_tag_key, Permissions, RestrictedPermissions, UserPermissions, isSpecialized, isSystemIssuer, makeSystemIssuerId, makeFunctionSub, getFunctionPermissions, getFunctionVersion, getFunctionAuthorization, getFunctionAuthentication, REGISTRY_CATEGORY, REGISTRY_CATEGORY_CONFIG, REGISTRY_DEFAULT, REGISTRY_GLOBAL, MODULE_PUBLIC_REGISTRY, RUNAS_ISSUER, RUNAS_KID_LEN, JWT_PERMISSION_CLAIM, REGISTRY_RESERVED_SCOPE_PREFIX, RUNAS_SYSTEM_ISSUER_SUFFIX, API_PUBLIC_ENDPOINT, dynamoScanTable, expBackoff, asyncPool, duplicate, IModuleSpec, };
//# sourceMappingURL=index.d.ts.map